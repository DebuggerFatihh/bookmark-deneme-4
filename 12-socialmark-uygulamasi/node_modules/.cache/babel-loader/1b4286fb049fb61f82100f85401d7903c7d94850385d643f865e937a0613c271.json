{"ast":null,"code":"import Sidebar from \"@/components/Home/SideBar\";\nexport default {\n  components: {\n    Sidebar\n  },\n  data() {\n    return {\n      bookmarkList: []\n    };\n  },\n  mounted() {\n    this.$socket.on(\"NEW_BOOKMARK_ADDED\", this.fetchData);\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.$appAxios.get(\"/bookmarks?_expand=category&_expand=user\").then(bookmark_list_response => {\n        console.log(\"bookmark_list_response :>> \", bookmark_list_response);\n        this.bookmarkList = bookmark_list_response?.data || [];\n      });\n      //! Bookmark olarak eklediklerimizi çekmek için user_bookmarks üzerinden çekelim..\n      this.$appAxios.get(\"/user_bookmarks/?_expand=bookmark&_expand=user\").then(user_bookmark_response => {\n        console.log(\"user_bookmark_response :>> \", user_bookmark_response);\n        this.$store.commit(\"setBookmarks\", user_bookmark_response?.data);\n      });\n\n      //! Like olarak eklediklerimizi çekmek için user_likes üzerinden çekelim..\n      this.$appAxios.get(\"/user_likes/?_expand=bookmark&_expand=user\").then(user_likes_response => {\n        this.$store.commit(\"setLikes\", user_likes_response?.data);\n      });\n    },\n    updateBookmarkList(categoryId) {\n      const url = categoryId ? `/bookmarks?_expand=category&_expand=user&categoryId=${categoryId}` : `/bookmarks?_expand=category&_expand=user`;\n      this.$appAxios.get(url).then(bookmark_list_response => {\n        this.bookmarkList = bookmark_list_response?.data || [];\n      });\n    }\n  }\n};","map":{"version":3,"names":["Sidebar","components","data","bookmarkList","mounted","$socket","on","fetchData","created","methods","$appAxios","get","then","bookmark_list_response","console","log","user_bookmark_response","$store","commit","user_likes_response","updateBookmarkList","categoryId","url"],"sources":["C:\\Users\\Lenovo\\Desktop\\vue\\ders-8-socialmark-uygulamasi\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n    <AppHeader />\r\n    <div class=\"flex flex-row\">\r\n      <Sidebar @category-changed=\"updateBookmarkList\" />\r\n      <app-bookmark-list v-if=\"bookmarkList.length > 0\" :items=\"bookmarkList\" />\r\n      <div v-else>Bookmark bulunmamaktadır..</div>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import Sidebar from \"@/components/Home/SideBar\";\r\n  export default {\r\n    components: {\r\n      Sidebar\r\n    },\r\n    data() {\r\n      return {\r\n        bookmarkList: []\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$socket.on(\"NEW_BOOKMARK_ADDED\",this.fetchData)\r\n    },\r\n    created() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      fetchData() {\r\n        this.$appAxios.get(\"/bookmarks?_expand=category&_expand=user\").then(bookmark_list_response => {\r\n          console.log(\"bookmark_list_response :>> \", bookmark_list_response);\r\n          this.bookmarkList = bookmark_list_response?.data || [];\r\n        });\r\n        //! Bookmark olarak eklediklerimizi çekmek için user_bookmarks üzerinden çekelim..\r\n        this.$appAxios.get(\"/user_bookmarks/?_expand=bookmark&_expand=user\").then(user_bookmark_response => {\r\n          console.log(\"user_bookmark_response :>> \", user_bookmark_response);\r\n          this.$store.commit(\"setBookmarks\", user_bookmark_response?.data);\r\n        });\r\n  \r\n        //! Like olarak eklediklerimizi çekmek için user_likes üzerinden çekelim..\r\n        this.$appAxios.get(\"/user_likes/?_expand=bookmark&_expand=user\").then(user_likes_response => {\r\n          this.$store.commit(\"setLikes\", user_likes_response?.data);\r\n        });\r\n      },\r\n      updateBookmarkList(categoryId) {\r\n        const url = categoryId ? `/bookmarks?_expand=category&_expand=user&categoryId=${categoryId}` : `/bookmarks?_expand=category&_expand=user`;\r\n        this.$appAxios.get(url).then(bookmark_list_response => {\r\n          this.bookmarkList = bookmark_list_response?.data || [];\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"AASE,OAAOA,OAAM,MAAO,2BAA2B;AAC/C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,oBAAoB,EAAC,IAAI,CAACC,SAAS;EACrD,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,SAAS,CAAC,CAAC;EAClB,CAAC;EACDE,OAAO,EAAE;IACPF,SAASA,CAAA,EAAG;MACV,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,sBAAqB,IAAK;QAC5FC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,sBAAsB,CAAC;QAClE,IAAI,CAACV,YAAW,GAAIU,sBAAsB,EAAEX,IAAG,IAAK,EAAE;MACxD,CAAC,CAAC;MACF;MACA,IAAI,CAACQ,SAAS,CAACC,GAAG,CAAC,gDAAgD,CAAC,CAACC,IAAI,CAACI,sBAAqB,IAAK;QAClGF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,sBAAsB,CAAC;QAClE,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEF,sBAAsB,EAAEd,IAAI,CAAC;MAClE,CAAC,CAAC;;MAEF;MACA,IAAI,CAACQ,SAAS,CAACC,GAAG,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAACO,mBAAkB,IAAK;QAC3F,IAAI,CAACF,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEC,mBAAmB,EAAEjB,IAAI,CAAC;MAC3D,CAAC,CAAC;IACJ,CAAC;IACDkB,kBAAkBA,CAACC,UAAU,EAAE;MAC7B,MAAMC,GAAE,GAAID,UAAS,GAAK,uDAAsDA,UAAW,KAAK,0CAAyC;MACzI,IAAI,CAACX,SAAS,CAACC,GAAG,CAACW,GAAG,CAAC,CAACV,IAAI,CAACC,sBAAqB,IAAK;QACrD,IAAI,CAACV,YAAW,GAAIU,sBAAsB,EAAEX,IAAG,IAAK,EAAE;MACxD,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}