{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CryptoJS from \"crypto-js\";\nexport default {\n  data() {\n    return {\n      userData: {\n        username: null,\n        fullname: null,\n        password: null\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      //const password=this.userData.password;\n      //const key=\"booklike123Q456\"\n      //const cryptedPassword=CryptoJS.AES.encrypt(password,key).toString();\n      //direkt \n      //const password =CryptoJS.AES.encrypt(this.userData.password,this.$store.getters._saltKey).toString();\n\n      //const password =CryptoJS.SHA256(this.userData.password).toString(); \n\n      const password = CryptoJS.HmacSHA1(this.userData.password, this.$store.getters._saltKey).toString();\n      console.log(password);\n      /*\r\n      const decryptedPassword=CryptoJS.AES.decrypt(cryptedPassword,key).toString(CryptoJS.enc.Utf8);\r\n          console.log(decryptedPassword);\r\n      // console.log(this.userData);\r\n      */\n      this.$appAxios.post(\"users\", {\n        ...this.userData,\n        password /* :cryptedPassword*/\n      }).then(registered_user_response => {\n        //sen users'a appAxios ile  post isteği at obje olarak userData'yı gönder fakat password'u ez ve gönder\n        //console.log('registered_user_response', registered_user_response)\n        this.$router.push({\n          name: \"HomePage\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["CryptoJS","data","userData","username","fullname","password","methods","onSave","HmacSHA1","$store","getters","_saltKey","toString","console","log","$appAxios","post","then","registered_user_response","$router","push","name"],"sources":["C:\\Users\\Lenovo\\Desktop\\vue\\6-Booklike\\ders-6-socialmark-uygulamasi\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"login_register_container\">\r\n      <h3 class=\"text-2xl text-center mb-3\">Kayıt Ol</h3>\r\n      <input v-model=\"userData.fullname\" type=\"text\" placeholder=\"Tam Ad\" class=\"input mb-3\" />\r\n      <input v-model=\"userData.username\" type=\"text\" placeholder=\"Kullanıcı Adı\" class=\"input mb-3\" />\r\n      <input v-model=\"userData.password\" type=\"password\" placeholder=\"Şifre\" class=\"input mb-3\" />\r\n      <button class=\"default-button\" @click=\"onSave\">Kayıt ol</button>\r\n      <span class=\"text-center mt-3 text-sm\">\r\n        Zaten Üyeyim,\r\n        <router-link :to=\"{name:'LoginPage'}\" class=\"text-red-900 hover:text-black\">\r\n        Giriş Yap\r\n        </router-link>\r\n      </span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CryptoJS from \"crypto-js\"\r\nexport default{\r\n  data(){\r\n    return{\r\n      userData:{\r\n        username:null,\r\n        fullname:null,\r\n        password:null\r\n      }\r\n    }\r\n  },\r\n  methods:{\r\n      onSave(){\r\n        //const password=this.userData.password;\r\n        //const key=\"booklike123Q456\"\r\n        //const cryptedPassword=CryptoJS.AES.encrypt(password,key).toString();\r\n        //direkt \r\n        //const password =CryptoJS.AES.encrypt(this.userData.password,this.$store.getters._saltKey).toString();\r\n        \r\n        \r\n        //const password =CryptoJS.SHA256(this.userData.password).toString(); \r\n        \r\n        const password =CryptoJS.HmacSHA1(this.userData.password,this.$store.getters._saltKey).toString(); \r\n\r\n        \r\n\r\n\r\n        console.log(password);\r\n        /*\r\n        const decryptedPassword=CryptoJS.AES.decrypt(cryptedPassword,key).toString(CryptoJS.enc.Utf8);\r\n  \r\n        console.log(decryptedPassword);\r\n        // console.log(this.userData);\r\n        */\r\n        this.$appAxios.post(\"users\",{...this.userData,password  /* :cryptedPassword*/}).then(registered_user_response=>{ //sen users'a appAxios ile  post isteği at obje olarak userData'yı gönder fakat password'u ez ve gönder\r\n            //console.log('registered_user_response', registered_user_response)\r\n            this.$router.push({name:\"HomePage\"})\r\n        })\r\n      }\r\n    } \r\n}\r\n</script>"],"mappings":";AAiBA,OAAOA,QAAO,MAAO,WAAU;AAC/B,eAAc;EACZC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,QAAQ,EAAC;QACPC,QAAQ,EAAC,IAAI;QACbC,QAAQ,EAAC,IAAI;QACbC,QAAQ,EAAC;MACX;IACF;EACF,CAAC;EACDC,OAAO,EAAC;IACJC,MAAMA,CAAA,EAAE;MACN;MACA;MACA;MACA;MACA;;MAGA;;MAEA,MAAMF,QAAO,GAAGL,QAAQ,CAACQ,QAAQ,CAAC,IAAI,CAACN,QAAQ,CAACG,QAAQ,EAAC,IAAI,CAACI,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAAC;MAKjGC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;MACrB;;;;;MAMA,IAAI,CAACU,SAAS,CAACC,IAAI,CAAC,OAAO,EAAC;QAAC,GAAG,IAAI,CAACd,QAAQ;QAACG,QAAO,CAAG;MAAqB,CAAC,CAAC,CAACY,IAAI,CAACC,wBAAwB,IAAE;QAAE;QAC7G;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAACC,IAAI,EAAC;QAAU,CAAC;MACvC,CAAC;IACH;EACF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}