{"ast":null,"code":"import { createRouter, createWebHashHistory } from \"vue-router\";\nimport store from \"../store\";\nconst routes = [{\n  name: \"HomePage\",\n  path: '/',\n  component: () => import(\"@/views/Home\")\n}, {\n  name: \"LoginPage\",\n  path: '/login',\n  component: () => import(\"@/views/Login\")\n}, {\n  name: \"RegisterPage\",\n  path: '/register',\n  component: () => import(\"@/views/Register\")\n}, {\n  name: \"NewBookmarkPage\",\n  path: '/new',\n  component: () => import(\"@/views/NewBookmark\")\n}];\n\n// export default createRouter({\n//     routes,\n//     history:createWebHashHistory()\n// })\n\nconst router = createRouter({\n  routes,\n  history: createWebHashHistory()\n});\n//routerı export etmeden önce \nrouter.beforeEach((to, from, next) => {\n  //bir componentin her işleminden önce bir hook yaratır.\n  //amacımız login olmadan giriç yapılmasını engellemek hompage'e\n\n  const authRequiredRoutes = [\"HomePage\"];\n  const _isAuthenticated = store.getters._isAuthenticated;\n  if (to.name == \"HomePage\" && _isAuthenticated) {}\n  console.log('to', to);\n  console.log('from', from);\n  next(); //next bir callbackür\n  //next(false) //denilirse sayfa görünmez \n}); //\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","store","routes","name","path","component","router","history","beforeEach","to","from","next","authRequiredRoutes","_isAuthenticated","getters","console","log"],"sources":["C:/Users/Lenovo/Desktop/vue/6-Booklike/ders-6-socialmark-uygulamasi/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory} from \"vue-router\";\r\nimport store from \"../store\"\r\n\r\nconst routes=[\r\n    {\r\n    name:\"HomePage\",\r\n    path:'/',\r\n    component: ()=>import(\"@/views/Home\")\r\n    },\r\n    {\r\n        name:\"LoginPage\",\r\n        path:'/login',\r\n        component: ()=>import(\"@/views/Login\")\r\n    },\r\n    {\r\n        name:\"RegisterPage\",\r\n        path:'/register',\r\n        component: ()=>import(\"@/views/Register\")\r\n    },\r\n    {\r\n        name:\"NewBookmarkPage\",\r\n        path:'/new',\r\n        component: ()=>import(\"@/views/NewBookmark\")\r\n    },\r\n]\r\n\r\n// export default createRouter({\r\n//     routes,\r\n//     history:createWebHashHistory()\r\n// })\r\n\r\nconst router=createRouter({\r\n    routes,\r\n    history:createWebHashHistory()\r\n})\r\n//routerı export etmeden önce \r\nrouter.beforeEach((to,from,next)=>{ //bir componentin her işleminden önce bir hook yaratır.\r\n    //amacımız login olmadan giriç yapılmasını engellemek hompage'e\r\n    \r\n    const authRequiredRoutes=[\"HomePage\"]\r\n\r\n    const _isAuthenticated=store.getters._isAuthenticated\r\n    if(to.name==\"HomePage\" && _isAuthenticated) {\r\n\r\n    }\r\n    \r\n    console.log('to',to); \r\n    console.log('from', from)\r\n    next();//next bir callbackür\r\n    //next(false) //denilirse sayfa görünmez \r\n}) //\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAO,YAAY;AAC9D,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,MAAM,GAAC,CACT;EACAC,IAAI,EAAC,UAAU;EACfC,IAAI,EAAC,GAAG;EACRC,SAAS,EAAEA,CAAA,KAAI,MAAM,CAAC,cAAc;AACpC,CAAC,EACD;EACIF,IAAI,EAAC,WAAW;EAChBC,IAAI,EAAC,QAAQ;EACbC,SAAS,EAAEA,CAAA,KAAI,MAAM,CAAC,eAAe;AACzC,CAAC,EACD;EACIF,IAAI,EAAC,cAAc;EACnBC,IAAI,EAAC,WAAW;EAChBC,SAAS,EAAEA,CAAA,KAAI,MAAM,CAAC,kBAAkB;AAC5C,CAAC,EACD;EACIF,IAAI,EAAC,iBAAiB;EACtBC,IAAI,EAAC,MAAM;EACXC,SAAS,EAAEA,CAAA,KAAI,MAAM,CAAC,qBAAqB;AAC/C,CAAC,CACJ;;AAED;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAACP,YAAY,CAAC;EACtBG,MAAM;EACNK,OAAO,EAACP,oBAAoB,CAAC;AACjC,CAAC,CAAC;AACF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAAE;EAChC;;EAEA,MAAMC,kBAAkB,GAAC,CAAC,UAAU,CAAC;EAErC,MAAMC,gBAAgB,GAACZ,KAAK,CAACa,OAAO,CAACD,gBAAgB;EACrD,IAAGJ,EAAE,CAACN,IAAI,IAAE,UAAU,IAAIU,gBAAgB,EAAE,CAE5C;EAEAE,OAAO,CAACC,GAAG,CAAC,IAAI,EAACP,EAAE,CAAC;EACpBM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEN,IAAI,CAAC;EACzBC,IAAI,CAAC,CAAC,CAAC;EACP;AACJ,CAAC,CAAC,EAAC;;AAEH,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}